apiVersion: v1
kind: Service
metadata:
  name: etcd-client
  labels:
    app: etcd
spec:
  ports:
  - port: 2379
    name: client
    protocol: TCP
  clusterIP: None
  selector:
    app: etcd
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: etcd
spec:
  selector:
    matchLabels:
      app: etcd
  serviceName: "etcd"
  replicas: 1
  template:
    metadata:
      labels:
        app: etcd 
    spec:
      initContainers:
        - name: restore
          image: <docker.io/gardener/etcdbr/etcdbrctl:0.1.0>     # change image here
          imagePullPolicy: Always
          command: 
          - /bin/sh
          - -ec
          - "if [ ! -d /var/etcd/data ]; then etcdbrctl restore --data-dir=/var/etcd/data --storage-provider=S3; fi"
          env:
            - name: STORAGE_CONTAINER
              value: <Container Name>
          volumeMounts:
            - mountPath: /root/.aws/
              name: aws-secret
            - mountPath: /var/etcd
              name: etcd-data
      containers:
        - name: etcd
          command:
          - /bin/sh
          - -ec
          - /usr/local/bin/etcd --data-dir=/var/etcd/data
          image: quay.io/coreos/etcd:v3.2.15
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -ec
              - ETCDCTL_API=3 etcdctl get foo
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          ports:
          - containerPort: 2380
            name: server
            protocol: TCP
          - containerPort: 2379
            name: client
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/etcd
            name: etcd-data
        - name: backup
          command:
          - etcdbrctl
          - snapshot
          - --schedule=*/5 * * * *
          - --max-backups=5
          - --storage-provider=S3
          image: <docker.io/gardener/etcdbr/etcdbrctl:0.1.0>    # change image here
          imagePullPolicy: Always
          env:
            - name: STORAGE_CONTAINER
              value: <Container Name>
          volumeMounts:
            - mountPath: /root/.aws/
              name: aws-secret
      volumes:
        - name: aws-secret
          secret:
            secretName: etcd-aws-backup 
            defaultMode: 0420
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi