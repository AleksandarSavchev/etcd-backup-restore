apiVersion: v1
kind: Service
metadata:
  name: etcd-client
  labels:
    app: etcd
spec:
  ports:
  - port: 2379
    name: client
    protocol: TCP
  clusterIP: None
  selector:
    app: etcd
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: etcd
spec:
  selector:
    matchLabels:
      app: etcd
  serviceName: "etcd"
  replicas: 1
  template:
    metadata:
      labels:
        app: etcd 
    spec:
      containers:
      - name: etcd
        command:
        - /bin/sh
        - -ec
        - "wget http://localhost:8080/initialize -S -O -; if [ $? -eq 0 ]; then etcd --data-dir=/var/etcd/data; fi;"
        image: quay.io/coreos/etcd:v3.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - ETCDCTL_API=3 etcdctl get foo
          initialDelaySeconds: 5
          periodSeconds: 5
        ports:
        - containerPort: 2380
          name: server
          protocol: TCP
        - containerPort: 2379
          name: client
          protocol: TCP
        volumeMounts:
        - mountPath: /var/etcd
          name: etcd-data
      - name: backup
        command:
        - etcdbrctl
        - server
        - --schedule=*/5 * * * *
        - --max-backups=5
        - --data-dir=/var/etcd/data
        - --storage-provider=S3      # change provider details here. (S3/Local)
        image: <docker.io/gardener/etcdbr/etcdbrctl:0.1.0>    # change image here
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /metrics
            port: server
          initialDelaySeconds: 3
          periodSeconds: 3
        ports:
        - containerPort: 8080
          name: server
          protocol: TCP
        env:
          - name: STORAGE_CONTAINER
            value: <Container Name>      # change storage container name here
        volumeMounts:
          - mountPath: /root/.aws/
            name: aws-secret
          - mountPath: /var/etcd
            name: etcd-data
      volumes:
        - name: aws-secret
          secret:
            secretName: <backup provider secret> # change provider credential secret name here
            defaultMode: 0420
  volumeClaimTemplates:
  - metadata:
      name: etcd-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi